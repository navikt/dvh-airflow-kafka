name: Python CI

on:
    push:
      branches:
        - main
        - feat**
        - modernize
      paths-ignore:
        - '**.md'
    workflow_dispatch:

env:
  PYTHON_VERSION: 3.12
  POETRY_VERSION: 1.5.1
  
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: ${{ env.PYTHON_VERSION }}

          - name: Install and configure Poetry
            uses: snok/install-poetry@v1
            with:
              version: ${{ env.POETRY_VERSION }}
              virtualenvs-create: true
              virtualenvs-in-project: true
          - name: Set up cache
            uses: actions/cache@v2
            id: cached-poetry-dependencies
            with:
              path: .venv
              key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          - name: Install dependencies
            run: poetry install
            if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

          - name: Install dependencies
            run: poetry install

          - name: Lint with flake8
            run: poetry run flake8 .

          - name: Run tests
            run: poetry run test